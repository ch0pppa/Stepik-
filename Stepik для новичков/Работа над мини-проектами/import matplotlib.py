import numpy as np
import matplotlib.pyplot as plt

# Функция, задающая начальное отклонение струны u(x, 0)
def начальное_отклонение(x):
    # Например, треугольная форма начального отклонения
    return np.maximum(0, 1 - np.abs(x) / 2)

# Решение волнового уравнения u(x, t)
def волновое_решение(x, t, c):
    return начальное_отклонение(x - c * t) + начальное_отклонение(x + c * t)

# Задаем параметры
c = 1           # Скорость распространения волн
x = np.linspace(-10, 10, 500)  # Массив значений x от -10 до 10
времена = [0, 2, 3/4]          # Моменты времени: t = 0, t = 2c, t = 3c/4

# Построение графиков для разных моментов времени
plt.figure(figsize=(10, 6))

for t in времена:
    u = волновое_решение(x, t, c)
    plt.plot(x, u, label=f"t = {t}c")

# Оформление графика
plt.title("Колебания неограниченной струны")
plt.xlabel("x")
plt.ylabel("u(x, t)")
plt.legend()
plt.grid(True)
plt.show()